Project : ver 0.10 전화번호 관리 프로그램. 

PhoneInfor 라는 이름의 클래스를 정의해 보자. 클래스는 다음의 데이터들의 문자열 형태로 저장이 가능 해야 하며, 저장된 데이터의 적절한 출력이 가능하도록 메소드 정의

• 이름            name                String
• 전화번호       phoneNumber         String
• 생년월일       birthday            String 

단, 생년월일 정보는 저장할 수도 있고, 저장 않을 수도 있게끔 생성자 생성.
====================================================================================================================================
Project : ver 0.20

"프로그램 사용자로부터 데이터 입력"
프로그램 사용자로부터 데이터를 입력 받아 클래스의 인스턴스를 생성하는 것이
핵심.
단 반복문을 이용해서 프로그램의 흐름을 계속 유지하도록 한다.
프로그램 종료를 하지 않으면, 다음과 같은 과정이 반복적으로 이루어짐.

키보드로부터 데이터 입력 
↓
입력 받은 데이터로 인스턴스 생성
↓
생성된 인스턴스의 메소드 호출
====================================================================================================================================
Project : ver 0.30

배열을 이용해서 프로그램 사용자가 입력하는 정보가 최대 100개까지 유지되도록 프로그램을 변경.// 100개 변수의 배열-100개의 참조 변수

아래기능 삽입

저장 : 이름, 전화번호, 생년월일 정보를 대상으로 하는 저장        // 배열에 "PhoneInfor 타입의 인스턴스 참조하는 주소값" 저장
검색 : 이름을 기준으로 데이터를 찾아서 해당 데이터의 정보를 출력  // 주소값을 통해서 이름을 가져온다. 배열의 index 
삭제 : 이름을 기준으로 데이터를 찾아서 해당 데이터를 삭제          // 

데이터 삭제 후 남아있는 데이터 처리는 데이터를 빈 공란이 없이 순차적으로
재정리 2번이 삭제되었다면 3번 이후 데이터들의 주소 값이 -1 처리되어 재저장.

1. 배열 생성
2. (참조 변수 타입의 배열)배열에 저장. 인스턴스 생성. 참조값 저장
3. 검색 : 찾고 보여준다. index 반환, 반복          ex) arr[4].showInfo();
4. 삭제 : 찾고 
====================================================================================================================================
Project : ver 0.40
다음 두 클래스를 추가로 삽입. 상속 구조로 구성 해보세요.
PhoneUnivInfor, PhoneCompaanyInfor,
개인적인 클래스 추가 하세요.

각 클래스에 정의되어야 하는 인스턴스 변수.

PhoneUnivInfor
이름            name                   String
전화번호       phoneNumber    	     String
주소            address                String
이메일         email                  String
전공            major                  String
학년            year                   String

PhoneCompanyInfor
이름             name                  String
전화번호        phoneNumber           String

이메일           email                 String
회사             company                String

상속구조의 클래스를 추가로 정의 해 보자 

[추가 사항]
1. 입력    --> 1. 일반  2. 대학  3. 회사  4. 동호회 --> 입력 형태로 구성

Ex) PhoneCafeInfor, PhoneFamilyInfor

"인스선트 1개만 생성"(싱글톤 패턴)
Manage  입력, 검색, 살제, 전체리스트

PhoneInfor 이름, 전화번호, 이메일

친구정보(상위클래스)
  ├─────────┐
대학친구        회사친구(하위클래스)

상속
->다형성 : 재사용, 기본 정의된 변수, 메서드 규약 내지 약속
->오버라이드
====================================================================================================================================
Project : ver 0.50





